/**
 * Generado con CRUDO
 * [$[FILENAME]$]
 */
package [$[BASE_PACKAGE]$].service[$[SUB_PACKAGE]$];

import java.util.Map;

import javax.validation.ValidationException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import [$[BASE_PACKAGE]$].infra.model.SelectableLazyDMFiller;
import [$[BASE_PACKAGE]$].model[$[SUB_PACKAGE]$].[$[CLASS_NAME]$];
import [$[BASE_PACKAGE]$].repo[$[SUB_PACKAGE]$].[$[REPO_CLASS_NAME]$];
import [$[BASE_PACKAGE]$].service.QueryHelper;

import lombok.Getter;

@Service
public class [$[SERVICE_CLASS_NAME]$] implements SelectableLazyDMFiller<[$[CLASS_NAME]$]> {

	@Getter
	@Autowired
	[$[REPO_CLASS_NAME]$] repo;

	public Page<[$[CLASS_NAME]$]> findByFilter(Map<String, String> filters, Pageable pageable) {
		return getRepo().findAll(QueryHelper.getFilterSpecification(filters), pageable);
	}

	@Override
	public [$[CLASS_NAME]$] findById(Object id) {
		if(id != null) {
			return getRepo().findById((Integer) id).orElse(null);
		}
		return null;
	}
	
	public [$[CLASS_NAME]$] save([$[CLASS_NAME]$] [$[VAR_NAME]$]) {
		validate([$[VAR_NAME]$]);
		return getRepo().save([$[VAR_NAME]$]);
	}
	
	public void validate([$[CLASS_NAME]$] [$[VAR_NAME]$]) throw ValidationException {
		//TODO: validar la entidad antes de guardarla
	}
}
